import _ from "lodash";
import { GetServerSideProps, GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { ParsedUrlQuery } from "querystring";
import React, { useEffect } from "react";
import { ReactElement } from "react";
import HeroContainer from "../../components/Hero/HeroMain";
import HeroIntro from "../../components/Hero/HeroIntro";
import Layout from "../../components/Layout";
import { Hero, Rampage, Role } from "../../interfaces/heroes";
import stratsApiService from "../../services/stratsApi.service";
import { usePageLoading } from "../../share";
import { NextPageWithLayout } from "../_app";
import HeroMain from "../../components/Hero/HeroMain";
import { GuideSymbol } from "../../interfaces/guide";
import FeaturedGuides from "../../components/Hero/FeaturedGuides";

type Props = {
  heroOverView: {
    hero: Hero;
    rampages: Rampage[];
    guide: GuideSymbol[];
  };
};

const HeroesPage: NextPageWithLayout<Props> = (props) => {
  const {
    heroOverView: { hero, rampages, guide },
  } = props;
  console.log(guide);
  const router = useRouter();
  const { isPageLoading } = usePageLoading();
  useEffect(() => {}, [router.query?.id]);
  return (
    <>
      <Head>
        <title>{hero.displayName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section>
        <HeroIntro hero={hero} />
        {/* <HeroMain hero={hero} rampages={rampages} /> */}
        <div className="container m-auto">
          {guide.length > 0 && <FeaturedGuides guide={guide[0]} />}
        </div>
      </section>
      {/* {isPageLoading ? (
        <p className="text-white">loading............</p>
      ) : (
        <HeroContainer data={heroStats} />
      )} */}
    </>
  );
};

HeroesPage.getLayout = function getLayout(page: ReactElement) {
  return <Layout>{page}</Layout>;
};

export const getServerSideProps: GetServerSideProps<Props> = async (
  context
) => {
  const res = await stratsApiService.getDetailHero({
    heroId: 102,
    // bracketIds: ["DIVINE", "IMMORTAL"],
    bracketBasicIds: "DIVINE_IMMORTAL",
    // topPlayersBracketIds: ["DIVINE", "IMMORTAL"],
  });
  const {
    constants: { hero },
    heroStats: { rampages, guide },
  }: {
    constants: { hero: Hero };
    heroStats: { rampages: Rampage[]; guide: GuideSymbol[] };
  } = res.data.data;
  return {
    props: {
      heroOverView: {
        hero,
        rampages,
        guide,
      },
    },
  };
};

export default HeroesPage;
